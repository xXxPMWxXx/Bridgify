{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Bridgify REST API",
    "description": "Swagger Document for Bridgify Backend API"
  },
  "host": "13.229.138.25:8000",
  "basePath": "/api",
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/user/test": {
      "get": {
        "description": "",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "description": "",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "description": "",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/getall": {
      "get": {
        "description": "",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user//user-profile": {
      "get": {
        "description": "",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Authorized User!!"
          }
        }
      }
    },

    "/face/upload": {
      "post": {
        "description": "",
        "tags": [
          "Face"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/face/post-face": {
      "post": {
        "description": "",
        "tags": [
          "Face"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "label",
            "in": "formData",
            "type": "text"
            
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/face/check-face": {
      "post": {
        "description": "",
        "tags": [
          "Face"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/elderly/insert": {
      "post": {
        "description": "Refer to postman, for the request body format",
        "tags": [
          "Elderly"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/elderly/update": {
      "put": {
        "description": "Refer to postman, for the request body format, only id is mandatory",
        "tags": ["Elderly"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/elderly/delete": {
      "delete": {
        "description": "",
        "tags": ["Elderly"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/elderly/get": {
      "get": {
        "description": "",
        "tags": ["Elderly"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/elderly/getAll": {
      "get": {
        "description": "",
        "tags": ["Elderly"],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }


  }
}